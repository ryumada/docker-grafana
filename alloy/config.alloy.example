logging {
  level  = "info"
  format = "logfmt"
}

// Logging pipeline
loki.write "loki_sink" {
  endpoint {
    url = env("LOKI_ENDPOINT")
  }
  external_labels = {
    "cluster" = env("CLUSTER_NAME"),
  }
}

${ALLOY_LOG_SOURCES}

loki.source.journal "journal_logs" {
  forward_to = [loki.write.loki_sink.receiver]
  labels     = {
    "host" = env("ALLOY_HOSTNAME"),
    "job"  = "journald",
  }
}

// Metrics pipeline
prometheus.remote_write "mimir_sink" {
  endpoint {
    url = env("MIMIR_REMOTE_WRITE_URL")
  }
}

// Host metrics
prometheus.exporter.unix "host_exporter" {}

prometheus.scrape "host_metrics" {
  targets    = prometheus.exporter.unix.host_exporter.targets
  forward_to = [prometheus.relabel.host_metrics.receiver]
}

prometheus.relabel "host_metrics" {
  forward_to = [prometheus.remote_write.mimir_sink.receiver]

  rule {
    action       = "replace"
    target_label = "service.name"
    replacement  = "host-metrics"
  }
  rule {
    action       = "replace"
    target_label = "host.name"
    replacement  = env("ALLOY_HOSTNAME")
  }
}
